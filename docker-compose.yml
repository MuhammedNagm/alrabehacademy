version: '3'
services:

  #PHP Service
  app:
    build:
      context: ./docker/php
    env_file:
      - ./docker/docker-compose.env
    image: digitalocean.com/php
    restart: unless-stopped
    tty: true
    environment:
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    depends_on:
      - db
      - cache
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - alrabeh-app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    env_file:
      - ./docker/docker-compose.env
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/logs:/var/log/nginx
    networks:
      - alrabeh-app-network

  #MySQL Service
  db:
    image: mysql:8.0
    command:
      - '--character-set-server=utf8mb4'
    #    image: mariadb:latest
    # image: mysql:5.7.22
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    env_file:
      - ./docker/docker-compose.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-alrabehacademy}
      MYSQL_USER: ${MYSQL_USER:-db_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-db_password}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/.data:/var/lib/mysql
      - ./docker/mysql/config:/etc/mysql
      - ./docker/mysql/mysql-files:/var/lib/mysql-files

    networks:
      - alrabeh-app-network

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    env_file:
      - ./docker/docker-compose.env
    mem_reservation: ${PHPMYADMIN_MEM_RESERVATION:-128M}
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    networks:
      - alrabeh-app-network

  cache:
    image: redis:alpine
    env_file:
      - ./docker/docker-compose.env
    restart: always
    tty: true
    ports:
      - "6380:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - cache:/data
    networks:
      - alrabeh-app-network
#Docker Networks
networks:
  alrabeh-app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  cache:
    driver: local
